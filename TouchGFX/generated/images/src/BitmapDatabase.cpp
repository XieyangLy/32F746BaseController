// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB565 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0x78531d01
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>

extern const unsigned char _background[]; // BITMAP_BACKGROUND_ID = 0, Size: 480x272 pixels
extern const unsigned char _blue_buttons_round_edge_small[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID = 1, Size: 170x60 pixels
extern const unsigned char _blue_buttons_round_edge_small_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 2, Size: 170x60 pixels
extern const unsigned char _blue_check_buttons_check_round_mark_active[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_ACTIVE_ID = 3, Size: 44x44 pixels
extern const unsigned char _blue_check_buttons_check_round_mark_pressed[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_PRESSED_ID = 4, Size: 44x44 pixels
extern const unsigned char _blue_progressindicators_bg_medium_circle_indicator_bg_full[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID = 5, Size: 104x104 pixels
extern const unsigned char _blue_progressindicators_fill_medium_circle_indicator_fill_full[]; // BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_FULL_ID = 6, Size: 104x104 pixels
extern const unsigned char _blue_radio_buttons_radio_round_button_inactive[]; // BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_INACTIVE_ID = 7, Size: 44x44 pixels
extern const unsigned char _blue_radio_buttons_radio_round_button_normal[]; // BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_NORMAL_ID = 8, Size: 44x44 pixels
extern const unsigned char _blue_togglebars_toggle_round_large_button_off[]; // BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID = 9, Size: 128x38 pixels
extern const unsigned char _blue_togglebars_toggle_round_large_button_on[]; // BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID = 10, Size: 128x38 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _background, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { _blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_check_buttons_check_round_mark_active, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_check_buttons_check_round_mark_pressed, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_progressindicators_bg_medium_circle_indicator_bg_full, 0, 104, 104, 16, 15, 72, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 74, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_progressindicators_fill_medium_circle_indicator_fill_full, 0, 104, 104, 17, 17, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_radio_buttons_radio_round_button_inactive, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_radio_buttons_radio_round_button_normal, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars_toggle_round_large_button_off, 0, 128, 38, 13, 1, 102, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars_toggle_round_large_button_on, 0, 128, 38, 13, 1, 102, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
